version: '3.9'

services:
  #nginx:
  #  image: nginxinc/nginx-unprivileged:alpine
  #  container_name: webserv.oauth2
  #  #command: 'sleep infinity'
  #  restart: always
  #  ports:
  #    - 80:80
  #    - 443:443
  #  #command: cp /etc/nginx/conf.d/certs/devRootCA.crt /usr/share/ca-certificates/ && update-ca-certificates && nginx -g "daemon off;"
  #  volumes:
  #    - ./nginx/conf.d:/etc/nginx/conf.d
  #    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #    - ./nginx/system:/tmp/
  #    - ./src/static:/tmp/static


  django_oauth2_backend:
    build: .
    container_name: webapp.oauth2
    # for debugging
    command: 'sleep infinity'
    # for development
    #command: >
    #  sh -c "poetry run src/manage.py migrate &&
    #  poetry run src/manage.py runserver 0.0.0.0:80"
    # for production
    #command: >
    #  "uwsgi --ini uwsgi.ini"
    ports:
      - '80:80'
    build:
      context: .
      dockerfile: Dockerfile
    image: django_oauth2_backend:latest
    volumes:
      - ./:/home/ec2-user/django_oauth2_backend
      #- /home/ec2-user/.aws:/home/ec2-user/.aws
      #- /home/ec2-user/.ssh:/home/ec2-user/.ssh
      - ./nginx/system:/tmp/
    environment:
      - DB_HOST=webdb.oauth2
      - DB_NAME=django_oauth
      - DB_USER=admin
      - DB_PASSWORD=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - pgdb
      - redis

  pgdb:
    image: postgres:alpine
    container_name: webdb.oauth2
    restart: always
    volumes:
      - django_oauth_pgsql_storage:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: django_oauth
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PG_DATA: /var/lib/postgresql/data

  #pgadmin:
  #  image: dpage/pgadmin4
  #  container_name: webadmin.oauth2
  #  restart: always
  #  ports:
  #    - 8080:80
  #  environment:
  #    PGADMIN_DEFAULT_EMAIL: 'ms0529756@gmail.com'
  #    PGADMIN_DEFAULT_PASSWORD: 'ms0529756@gmail.com'
  #  volumes:
  #    - django_oauth_pgadmin_storage:/var/lib/pgadmin

  redis:
    image: redis:alpine
    container_name: webcache.oauth2
    restart: always
    volumes:
      - django_oauth_redis_storage:/data

  #redis-commander:
  #  container_name: webcacheadmin.oauth2
  #  image: rediscommander/redis-commander:latest
  #  restart: always
  #  ports:
  #    - 5005:8081
  #  environment:
  #    #- URL_PREFIX=/redis-management
  #    - REDIS_HOSTS=redis:redis:6379
  #  depends_on:
  #    - redis


  #swaggerapi:
  #  # poetry run python manage.py spectacular --file schema.yml
  #  # for displaying api doc on swaggerapi service.
  #  # support OpenAPI v3
  #  container_name: webdoc.oauth2
  #  image: swaggerapi/swagger-ui:latest
  #  environment:
  #    SWAGGER_JSON: '/schema.yml'
  #  volumes:
  #    - ./src/schema.yml:/schema.yml
  #  ports:
  #    - 8081:8080


networks:
  db_net:

volumes:
  django_oauth_pgsql_storage:
  django_oauth_redis_storage:
  django_oauth_pgadmin_storage: