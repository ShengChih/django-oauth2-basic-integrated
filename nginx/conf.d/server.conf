upstream django {
    server webapp.oauth2:8000;
}

#upstream tornado_servers {
#    server backend:8001  max_fails=3     fail_timeout=1s down;
#    server backend:8002  max_fails=3     fail_timeout=1s down;
#    server backend:8004  max_fails=4     fail_timeout=1s;
#}

#upstream django_servers {
#    server backend:8003  max_fails=3     fail_timeout=1s;
#}

#upstream gitlab_servers {
#    server 172.31.18.43:80  max_fails=3     fail_timeout=1s;
#}

#upstream pgadmin_servers {
#    server pgadmin:80  max_fails=3     fail_timeout=1s;
#}

#upstream redis_commanders {
#    server redis-commander:8081 max_fails=3     fail_timeout=1s;
#}

#upstream drone_servers {
#    server 172.31.18.43:8081  max_fails=3     fail_timeout=1s;
#}

#upstream frontend {
#    server frontend:3000 max_fails=3     fail_timeout=1s;
#}

#server {
#    listen       80;
#    listen  [::]:80;
#    server_name example.com www.example.com;
#
#    location /.well-known/acme-challenge/ {
#        root /var/www/certbot;
#    }
#
#    location /static/ {
#        alias /tmp/static/;
#    }
#
#    location / {
#        include     /etc/nginx/uwsgi_params;
#        uwsgi_pass  django;
#    }
#
#    #location /redis-management {
#    #    rewrite /redis-management/(.*) /redis-management/$1  break;
#    #    include /etc/nginx/conf.d/proxy.conf;
#    #    proxy_set_header X-Script-Name /redis-management;
#    #    proxy_pass http://redis_commanders;
#    #}
#
#    #location /pgadmin4 {
#    #    rewrite /pgadmin4/(.*) /pgadmin4/$1  break;
#    #    include /etc/nginx/conf.d/proxy.conf;
#    #    proxy_set_header X-Script-Name /pgadmin4;
#    #    proxy_pass http://pgadmin_servers;
#    #}
#
#    #location /frontend {
#    #    rewrite /frontend/(.*) /frontend/$1  break;
#    #    include /etc/nginx/conf.d/proxy.conf;
#    #    proxy_set_header X-Script-Name /frontend;
#    #    proxy_pass http://frontend;
#    #}
#}

#server {
#    listen       3000;
#    listen  [::]:3000;
#    server_name ci-cd;
#
#    location / {
#        include /etc/nginx/conf.d/proxy.conf;
#        proxy_set_header X-Script-Name /droneci;
#        proxy_pass http://drone_servers;
#    }
#
#    location /gitlab {
#        rewrite /gitlab/(.*) /gitlab/$1  break;
#        include /etc/nginx/conf.d/proxy.conf;
#        proxy_set_header X-Script-Name /gitlab;
#        proxy_pass http://gitlab_servers;
#    }
#
#    error_page   500 502 503 504  /50x.html;
#    location = /50x.html {
#        root   /usr/share/nginx/html;
#    }
#}



server {
    listen       443 ssl http2;
    listen  [::]:443 ssl http2;
    server_name example.com www.example.com;

    ssl_certificate /etc/nginx/ssl/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/example.com/privkey.pem;


    #proxy_ssl_trusted_certificate /etc/nginx/trusted_ca_cert.crt;
    #proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
    #proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
    #proxy_max_temp_file_size  0;

    location /static/ {
        alias /tmp/static/;
    }

    location / {
        include     /etc/nginx/uwsgi_params;
        uwsgi_pass  django;
        # include /etc/nginx/conf.d/proxy.conf;
        # proxy_pass http://webapp.oauth2$request_uri;
    }

    #location /redis-management {
    #    rewrite /redis-management/(.*) /redis-management/$1  break;
    #    include /etc/nginx/conf.d/proxy.conf;
    #    proxy_set_header X-Script-Name /redis-management;
    #    proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #    proxy_ssl_ciphers   HIGH:!aNULL:!MD5;
    #    proxy_pass http://redis_commanders;
    #}

    #location /pgadmin4 {
    #    rewrite /pgadmin4/(.*) /pgadmin4/$1  break;
    #    include /etc/nginx/conf.d/proxy.conf;
    #    proxy_set_header X-Script-Name /pgadmin4;
    #    proxy_pass http://pgadmin_servers;
    #    proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #    proxy_ssl_ciphers   HIGH:!aNULL:!MD5;
    #    proxy_ssl_trusted_certificate /etc/nginx/certs/devRootCA.crt;
    #}

    #location /frontend {
    #    rewrite /frontend/(.*) /frontend/$1  break;
    #    include /etc/nginx/conf.d/proxy.conf;
    #    proxy_set_header X-Script-Name /frontend;
    #    proxy_pass http://frontend;
    #}

    #location /gitlab {
    #    rewrite /gitlab/(.*) /gitlab/$1  break;
    #    include /etc/nginx/conf.d/proxy.conf;
    #    proxy_set_header X-Script-Name /gitlab;
    #    proxy_pass http://gitlab;
    #}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

